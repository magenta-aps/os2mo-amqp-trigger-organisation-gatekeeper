# SPDX-FileCopyrightText: 2019-2020 Magenta ApS
# SPDX-License-Identifier: MPL-2.0
[tool.poetry]
name = "orggatekeeper"
version = "2.7.0"
description = "OS2mo AMQP Trigger receiver that updates line management information"
authors = ["Magenta ApS <info@magenta.dk>"]
license = "MPL-2.0"
readme = "README.md"
homepage = "https://magenta.dk/"
repository = "https://git.magenta.dk/rammearkitektur/os2mo-triggers/os2mo-amqp-trigger-organisation-gatekeeper"
keywords = ["os2mo", "amqp"]

[tool.poetry.dependencies]
python = "^3.10"
structlog = "^23.1.0"
ramqp = "^8.4.0"
pydantic = "^1.10.8"
raclients = "^3.1.4"
gql = "^3.2.0"
more-itertools = "^9.1.0"
ra-utils = "^1.13.3"
uvicorn = {extras = ["standard"], version = "^0.22.0"}
prometheus-fastapi-instrumentator = "^6.0.0"
fastapi = "^0.95.1"
pytest-asyncio = "^0.21.0"
sentry-sdk = "^1.24.0"

[tool.poetry.dev-dependencies]
pytest = "^7.3.1"
black = "^23.3.0"
reorder-python-imports = "^3.9.0"
mypy = "^1.3"
pre-commit = "^3.2.1"
pylint-pydantic = "^0.1.7"
requests = "^2.30.0"
asgi-lifespan = "^2.1.0"

[tool.poetry.group.dev.dependencies]
pytest-split = "^0.8.0"
pytest-cov = "^4.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.autopub]
git-username = "MagentaBot"
git-email = "info@magenta.dk"

[tool.pytest.ini_options]
asyncio_mode="auto"

[tool.mypy]
python_version = "3.10"
warn_return_any = "True"
warn_unused_configs = "True"
check_untyped_defs = "True"
disallow_untyped_defs = "True"
plugins = "pydantic.mypy"

[tool.flake8]
max-line-length = 88
exclude = [
".git", "__pycache__", ".mypy_cache", ".pytest_cache", ".venv", ".gitlab"
]
